<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AP Computer Science Principles</title>
    <description></description>
    <link>http://bsk.education/AP-CSP/AP-CSP/</link>
    <atom:link href="http://bsk.education/AP-CSP/AP-CSP/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 13 Oct 2016 11:59:42 -0400</pubDate>
    <lastBuildDate>Thu, 13 Oct 2016 11:59:42 -0400</lastBuildDate>
    <generator>Jekyll v3.1.3</generator>
    
      <item>
        <title>üîÄ &lt;code&gt;else&lt;/code&gt; &amp; &lt;code&gt;else if&lt;/code&gt;</title>
        <description>&lt;h2 id=&quot;learning-targets&quot;&gt;Learning Targets&lt;/h2&gt;
&lt;p&gt;I can use &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;else&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;else if&lt;/code&gt; to create multiple conditions in a p5 sketch.&lt;/p&gt;

&lt;h2 id=&quot;else-if&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;else if&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Move your mouse across this sketch:&lt;/p&gt;
&lt;iframe src=&quot;/AP-CSP/Code_Examples/ElseAndElseIf&quot; width=&quot;500px&quot; height=&quot;500px&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;How many conditionals do I have?&lt;/p&gt;

&lt;p&gt;What‚Äôs &lt;strong&gt;wrong&lt;/strong&gt; with this one?&lt;/p&gt;

&lt;script type=&quot;text/p5&quot; data-autoplay=&quot;&quot; data-preview-width=&quot;300px&quot; data-preview-height=&quot;&quot;&gt;
var bgColor = &#39;white&#39;

function setup() {
  createCanvas(windowWidth, windowHeight)
}

function draw() {
  background(bgColor)
    // fill(bgColor);
    // ellipse(250,250,mouseY,mouseY)
  if (mouseX &lt; 4 * windowWidth / 5) {
    bgColor = &#39;#6638F0&#39;;
  } else if (mouseX &lt; 3 * windowWidth / 5) {
    bgColor = &#39;#890424&#39;;
  } else if (mouseX &lt; 2 * windowWidth / 5) {
    bgColor = &#39;#20C8B6&#39;;
  } else if (mouseX &lt; windowWidth / 5) {
    bgColor = &#39;#82BCFB&#39;;
  } else {
    bgColor = &#39;#E12874&#39;;
  }
}
&lt;/script&gt;

</description>
        <pubDate>Thu, 13 Oct 2016 11:50:00 -0400</pubDate>
        <link>http://bsk.education/AP-CSP/AP-CSP/2016/10/13/else-else-if.html</link>
        <guid isPermaLink="true">http://bsk.education/AP-CSP/AP-CSP/2016/10/13/else-else-if.html</guid>
        
        
      </item>
    
      <item>
        <title>Make More Stuff Move</title>
        <description>&lt;h2 id=&quot;do-now-in-google-classroom&quot;&gt;Do Now (In Google Classroom)&lt;/h2&gt;
&lt;p&gt;What does it mean to &lt;strong&gt;initialize&lt;/strong&gt; a variable? Why do we need to do that when programming?
What does it mean to &lt;strong&gt;increment&lt;/strong&gt; a variable? What does it let us do?
Why should we pick meaningful names for variables in our code?&lt;/p&gt;

&lt;h2 id=&quot;from-the-ap&quot;&gt;From the AP:&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;Program instructions may involve variables that are initialized and updated, read, and written  &lt;br /&gt;
Meaningful names for variables and procedures help people better understand programs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;back-to-bouncing&quot;&gt;Back to Bouncing&lt;/h2&gt;

&lt;iframe src=&quot;/AP-CSP/Code_Examples/ChangeColorBounce&quot; width=&quot;100%&quot; height=&quot;200px&quot; style=&quot;border:solid&quot;&gt;&lt;/iframe&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Specification&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Points&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Your &lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; must resize to the window.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;User created variables for &lt;code class=&quot;highlighter-rouge&quot;&gt;x position&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;y position&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;x direction&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;y direction&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Conditionals for the left/right and top/bottom edge of the screen&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;strong&gt;New Stuff!&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;!!&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Make your ellipse change color when it hits the edge&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Add another shape (&lt;code class=&quot;highlighter-rouge&quot;&gt;ellipse()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;triangle()&lt;/code&gt;) and make it move separately&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;strong&gt;Extension&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;‚ú±&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;When a key is pressed either change the &lt;strong&gt;shape&lt;/strong&gt; or the &lt;strong&gt;size of the shape&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Ball bounces using only &lt;strong&gt;2&lt;/strong&gt; conditionals&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;strong&gt;Total:&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;__ / 10&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>
        <pubDate>Tue, 11 Oct 2016 17:36:00 -0400</pubDate>
        <link>http://bsk.education/AP-CSP/AP-CSP/2016/10/11/make-more-stuff-move.html</link>
        <guid isPermaLink="true">http://bsk.education/AP-CSP/AP-CSP/2016/10/11/make-more-stuff-move.html</guid>
        
        
      </item>
    
      <item>
        <title>üîç Explore: Algorithms</title>
        <description>&lt;h1 id=&quot;ap-learning-targets&quot;&gt;üéØ AP Learning Targets&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;I explain how computing innovations affect communication, interaction, and cognition.&lt;/li&gt;
  &lt;li&gt;I explain how computing has impacted innovations in other fields.&lt;/li&gt;
  &lt;li&gt;I explain how programs implement algorithms.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;do-now-in-google-classroom&quot;&gt;Do Now (In Google Classroom)&lt;/h1&gt;
&lt;p&gt;Look at this image:
&lt;img src=&quot;https://static01.nyt.com/images/2016/08/01/opinion/01angwin/01angwin-superJumbo.jpg&quot; alt=&quot;&quot; /&gt;
What do you think it means?&lt;/p&gt;

&lt;h1 id=&quot;ap-explore-task&quot;&gt;AP Explore Task&lt;/h1&gt;
&lt;p&gt;We‚Äôre going to take a bit of a break from coding.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;From the AP:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AP Explore Guidelines&lt;/strong&gt;
&amp;gt; Computing innovations impact our lives in ways that require considerable study and reflection for us to fully understand them. In this performance task, you will explore a computing innovation of your choice. Your close examination of this computing innovation will deepen your understanding of computer science principles.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You will be provided with 8 hours of class time to develop, complete, and submit the following:
1. A computational artifact
2. Written responses (2a-2e).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;This performance task requires you to select and investigate a computational innovation that:
1. has had or has the potential to have significant beneficial and harmful effects on society, economy, or culture;
2. consumes, produces, and/or transforms data; and
3. raises at least one data storage concern, data privacy concern, or data security concern.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;your-task&quot;&gt;Your Task:&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;2c. Computing Innovation: Explain at least one beneficial effect and at least one harmful effect the computing innovation has had, or has the potential to have, on society, economy, or culture. (Approximately 250 words)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;üîó For each online source, include the permanent URL. Identify the author, title, source, the date you retrieved the source, and, if possible, the date the reference was written or posted&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nytimes.com/2016/08/01/opinion/make-algorithms-accountable.html?nytmobile=0&quot;&gt;‚ÄúMake Algorithms Accountable‚Äù&lt;/a&gt; by Julia Angwin, The New York Times Op-Ed&lt;/p&gt;
</description>
        <pubDate>Thu, 06 Oct 2016 10:59:00 -0400</pubDate>
        <link>http://bsk.education/AP-CSP/AP-CSP/2016/10/06/explore-algorithms.html</link>
        <guid isPermaLink="true">http://bsk.education/AP-CSP/AP-CSP/2016/10/06/explore-algorithms.html</guid>
        
        
      </item>
    
      <item>
        <title>üîÇ Conditionals &amp; Variables</title>
        <description>&lt;h2 id=&quot;do-now-in-span-stylecolor-ed1f5ep5span&quot;&gt;Do Now (in &lt;span style=&quot;color: #ED1F5E&quot;&gt;p5&lt;/span&gt;)&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Create a canvas that is the size of the screen&lt;/li&gt;
  &lt;li&gt;Create a shape (&lt;code class=&quot;highlighter-rouge&quot;&gt;ellipse()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;rect()&lt;/code&gt;, etc) that follows your mouse&lt;/li&gt;
  &lt;li&gt;Write a conditional so that the &lt;code class=&quot;highlighter-rouge&quot;&gt;fill()&lt;/code&gt; of the shape changes if the mouse is on the &lt;strong&gt;left&lt;/strong&gt; or &lt;strong&gt;right&lt;/strong&gt; side of the screen.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Like this:&lt;/p&gt;

&lt;iframe src=&quot;/AP-CSP/Code_Examples/left_right/index.html&quot; width=&quot;100%&quot; height=&quot;200px&quot; style=&quot;border:none&quot;&gt;&lt;/iframe&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;conditionals--variables&quot;&gt;Conditionals &amp;amp; Variables&lt;/h2&gt;

&lt;p&gt;Our next challenge is to make a sketch where a &lt;del&gt;ball&lt;/del&gt; shape bounces around the screen.&lt;/p&gt;

&lt;p&gt;This is a more complicated than the sketches we‚Äôve done so far, because we will be &lt;strong&gt;defining&lt;/strong&gt; our own variables.&lt;/p&gt;

&lt;p&gt;To figure out what variables we need, think about what needs to &lt;strong&gt;change&lt;/strong&gt; so a shape looks like it‚Äôs bouncing. Let‚Äôs look at it:&lt;/p&gt;

&lt;iframe src=&quot;/AP-CSP/Code_Examples/Trumpoo&quot; width=&quot;100%&quot; height=&quot;200px&quot; style=&quot;border:solid&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;A pile of üí© moves across the screen. What changes?&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;x position&lt;/code&gt; of the shape&lt;/li&gt;
  &lt;li&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;y position&lt;/code&gt; of the shape&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, the üí© hits the edge of the screen. What changes?&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;x direction&lt;/code&gt; ‚Äì if the shape hits the left edge, it should go right. If it hits the right edge, it should go left.&lt;/li&gt;
  &lt;li&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;y direction&lt;/code&gt; ‚Äì if the shape hits the top, it should start moving down. If it hits the bottom, it should start moving up.&lt;/li&gt;
&lt;/ol&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Specification&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Points&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Your &lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt; must resize to the window.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;User created variables&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Conditionals for the left/right and top/bottom edge of the screen&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;strong&gt;Extension&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;‚ú±&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Ball bounces using only &lt;strong&gt;2&lt;/strong&gt; conditionals&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;strong&gt;Total:&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;__ / 5&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>
        <pubDate>Tue, 27 Sep 2016 21:48:00 -0400</pubDate>
        <link>http://bsk.education/AP-CSP/AP-CSP/2016/09/27/conditionals-variables.html</link>
        <guid isPermaLink="true">http://bsk.education/AP-CSP/AP-CSP/2016/09/27/conditionals-variables.html</guid>
        
        
      </item>
    
      <item>
        <title>‚úñ = Variables </title>
        <description>&lt;h1 id=&quot;part-1&quot;&gt;Part 1&lt;/h1&gt;

&lt;h2 id=&quot;do-now&quot;&gt;Do Now&lt;/h2&gt;
&lt;p&gt;What‚Äôs a variable?&lt;/p&gt;

&lt;h2 id=&quot;from-the-ap&quot;&gt;From the AP:&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;Program instructions may involve variables that are initialized and updated, read, and written  &lt;br /&gt;
Meaningful names for variables and procedures help people better understand programs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;built-in-variables-in-span-stylecolor-ed1f5ep5span&quot;&gt;Built-in Variables in &lt;span style=&quot;color: #ED1F5E&quot;&gt;p5&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;We‚Äôve actually seen a few variables in p5 already.&lt;/p&gt;

&lt;p&gt;Look at the code below:&lt;/p&gt;

&lt;script type=&quot;text/p5&quot; data-autoplay=&quot;&quot; data-preview-width=&quot;300&quot; data-preview-height=&quot;&quot;&gt;
// This goes at the top of your code
function setup(){
    createCanvas(windowWidth,windowHeight)
}

function draw(){
background(&#39;white&#39;)
textSize(10)
text(&#39;Mouse X = &#39; + mouseX + &quot; | Mouse Y = &quot; + mouseY, 10, 10)
}
&lt;/script&gt;

&lt;p&gt;What are &lt;code class=&quot;highlighter-rouge&quot;&gt;mouseX&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;mouseY&lt;/code&gt; equal to? If you said ‚Äúit keeps changing!‚Äù you‚Äôre absolutely right. These are variables.&lt;/p&gt;

&lt;p&gt;Take a closer look at my code. How &lt;strong&gt;big&lt;/strong&gt; is my canvas? If you said ‚Äúit keeps changing!‚Äù you‚Ä¶get the idea. Also variables.&lt;/p&gt;

&lt;h3 id=&quot;exploring-variables&quot;&gt;Exploring variables&lt;/h3&gt;
&lt;p&gt;‚ú± Create a canvas that is the width and height of the window.&lt;/p&gt;

&lt;p&gt;‚ú± Draw a &lt;code class=&quot;highlighter-rouge&quot;&gt;line()&lt;/code&gt; from the &lt;strong&gt;top middle&lt;/strong&gt; of your screen (just below the camera) to your mouse cursor.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hint: you will need variables to create the canvas. How could use those same variables to find &lt;strong&gt;half&lt;/strong&gt; your screen?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It should look something like this:&lt;/p&gt;

&lt;script type=&quot;text/p5&quot; data-autoplay=&quot;&quot; data-preview-width=&quot;720&quot; data-preview-height=&quot;&quot;&gt;
function setup() {
  createCanvas(windowWidth,windowHeight)
}

function draw() {
  background(&#39;white&#39;)
  line(windowWidth/2,0,mouseX,mouseY)
}
&lt;/script&gt;

&lt;blockquote&gt;
  &lt;p&gt;Extend yourself! Give the line a different &lt;code class=&quot;highlighter-rouge&quot;&gt;stroke&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;strokeWeight&lt;/code&gt;  &lt;br /&gt;
Are you seeing a whole bunch of lines? How can you draw &lt;em&gt;only one&lt;/em&gt;?  &lt;br /&gt;
Can you ‚Äúhang‚Äù a rectangle off the end of the line?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;back-to-the-drawing-board-canvas&quot;&gt;Back to the &lt;del&gt;Drawing board&lt;/del&gt; Canvas&lt;/h3&gt;
&lt;p&gt;Go back to either your snowman or your own drawing, and add variables. But sure to use:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;windowWidth&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;windowHeight&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mouseX&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mouseY&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;part-2&quot;&gt;Part 2&lt;/h1&gt;

&lt;h2 id=&quot;user-defined-variables&quot;&gt;üó£ User-defined variables&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Steps to make a variable&lt;/strong&gt;
@ the top of your code:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Declare (ex. &lt;code class=&quot;highlighter-rouge&quot;&gt;var xpos&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;Initialize (ex. &lt;code class=&quot;highlighter-rouge&quot;&gt;var xpos = 50&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;Use (ex. &lt;code class=&quot;highlighter-rouge&quot;&gt;ellipse(xpos, 100, 50, 50);&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;script type=&quot;text/p5&quot; data-autoplay=&quot;&quot; data-preview-width=&quot;&quot; data-preview-height=&quot;&quot;&gt;
var xpos = 50
// What happens if you change me?

function setup() {
	createCanvas(windowWidth, windowHeight)
}

function draw() {
	background(&#39;#FEF790&#39;)
	fill(&#39;#7F1AE5&#39;)
	ellipse(xpos, 50, 50, 50);
}
&lt;/script&gt;

</description>
        <pubDate>Sun, 25 Sep 2016 12:13:00 -0400</pubDate>
        <link>http://bsk.education/AP-CSP/AP-CSP/2016/09/25/variables.html</link>
        <guid isPermaLink="true">http://bsk.education/AP-CSP/AP-CSP/2016/09/25/variables.html</guid>
        
        
      </item>
    
      <item>
        <title>üëæ + üëΩ + ü§ñ = Review</title>
        <description>&lt;h2 id=&quot;do-now&quot;&gt;Do Now&lt;/h2&gt;
&lt;p&gt;You know how to create a circle (&lt;code class=&quot;highlighter-rouge&quot;&gt;ellipse()&lt;/code&gt;), and you know how to create a rectangle (&lt;code class=&quot;highlighter-rouge&quot;&gt;rect()&lt;/code&gt;). How could you combine these two shapes to draw a &lt;strong&gt;semicircle&lt;/strong&gt;?&lt;/p&gt;

&lt;p&gt;Like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/AP-CSP/images/halfcircle.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;design-your-own-character&quot;&gt;Design your own character&lt;/h2&gt;

&lt;p&gt;Using the &lt;span style=&quot;color: #ED1F5E&quot;&gt;p5&lt;/span&gt; graph paper, design your own character‚Äì either an alien üëΩ/üëæ or a robot ü§ñ.&lt;/p&gt;

&lt;h2 id=&quot;span-classmega-octicon-octicon-checkspan-meeting-standards&quot;&gt;&lt;span class=&quot;mega-octicon octicon-check&quot;&gt;&lt;/span&gt; Meeting Standards&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Planning graph paper indicates accurate pixel measurements.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Code corresponds to planning graph paper.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Code each of the following commands:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;‚ú± &lt;code class=&quot;highlighter-rouge&quot;&gt;rect()&lt;/code&gt;  &lt;br /&gt;
‚ú± &lt;code class=&quot;highlighter-rouge&quot;&gt;line()&lt;/code&gt;  &lt;br /&gt;
‚ú± &lt;code class=&quot;highlighter-rouge&quot;&gt;ellipse()&lt;/code&gt;  &lt;br /&gt;
‚ú± &lt;code class=&quot;highlighter-rouge&quot;&gt;fill()&lt;/code&gt;  &lt;br /&gt;
‚ú± &lt;code class=&quot;highlighter-rouge&quot;&gt;stroke()&lt;/code&gt;  &lt;br /&gt;
‚ú± &lt;code class=&quot;highlighter-rouge&quot;&gt;strokeWeight()&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;span-classmega-octicon-octicon-rocketspan-push-yourself-for-a-4&quot;&gt;&lt;span class=&quot;mega-octicon octicon-rocket&quot;&gt;&lt;/span&gt; Push yourself for a 4!&lt;/h2&gt;
&lt;p&gt;Display the &lt;code class=&quot;highlighter-rouge&quot;&gt;mouseX&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;mouseY&lt;/code&gt; on the screen while drawing:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// This goes at the top of your code&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;white&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;textSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Mouse X = &#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mouseX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; | Mouse Y = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mouseY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Fri, 23 Sep 2016 13:07:00 -0400</pubDate>
        <link>http://bsk.education/AP-CSP/AP-CSP/2016/09/23/review.html</link>
        <guid isPermaLink="true">http://bsk.education/AP-CSP/AP-CSP/2016/09/23/review.html</guid>
        
        
      </item>
    
      <item>
        <title>Do You Want to Build a ‚õÑ</title>
        <description>&lt;h2 id=&quot;do-now&quot;&gt;Do Now&lt;/h2&gt;
&lt;p&gt;‚ú± Create a canvas that is &lt;strong&gt;500px&lt;/strong&gt; wide and &lt;strong&gt;500px&lt;/strong&gt; tall.  &lt;br /&gt;
‚ú± Draw an &lt;code class=&quot;highlighter-rouge&quot;&gt;ellipse()&lt;/code&gt; inside of another ellipse.  &lt;br /&gt;
‚ú± Give each &lt;code class=&quot;highlighter-rouge&quot;&gt;ellipse()&lt;/code&gt; a different color.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;a href=&quot;http://bsk.education/SE8_p5js/Code_Examples/Snowman/&quot;&gt;‚òÉ&lt;/a&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;Do you wanna build a snowman?&lt;/em&gt;  &lt;br /&gt;
&lt;em&gt;It doesn‚Äôt have to be a snowman‚Ä¶&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;createCanvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Use the &lt;span style=&quot;color: #ED1F5E&quot;&gt;p5&lt;/span&gt; graph paper to plan your snowman&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h2 id=&quot;span-classmega-octicon-octicon-light-bulbspan-helpful-drawing-hint&quot;&gt;&lt;span class=&quot;mega-octicon octicon-light-bulb&quot;&gt;&lt;/span&gt; Helpful Drawing Hint&lt;/h2&gt;
&lt;p&gt;If you add this code to your sketches, you‚Äôll be able to see where your mouse is on the screen‚Ä¶very helpful for drawing!&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;white&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;textSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Mouse X = &#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mouseX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; | Mouse Y = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mouseY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;span-classmega-octicon-octicon-checkspan-meeting-standards&quot;&gt;&lt;span class=&quot;mega-octicon octicon-check&quot;&gt;&lt;/span&gt; Meeting Standards&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;At least 3 &lt;code class=&quot;highlighter-rouge&quot;&gt;ellipse()&lt;/code&gt;, correctly layered so that it &lt;em&gt;looks&lt;/em&gt; like one is resting on top of the other.&lt;/li&gt;
  &lt;li&gt;At least two &lt;code class=&quot;highlighter-rouge&quot;&gt;line()&lt;/code&gt; for the arms&lt;/li&gt;
  &lt;li&gt;What shape do you think I used to make the nose? Use &lt;a href=&quot;https://p5js.org/reference/&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;p5‚ú± Reference&lt;/code&gt;&lt;/a&gt; to figure out how to make this shape.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;span-classmega-octicon-octicon-rocketspan-push-yourself-for-a-4&quot;&gt;&lt;span class=&quot;mega-octicon octicon-rocket&quot;&gt;&lt;/span&gt; Push yourself for a 4!&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Use &lt;code class=&quot;highlighter-rouge&quot;&gt;fill()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;stroke()&lt;/code&gt; to give your snowman some color.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;It doesn‚Äôt have to be a snowman. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 22 Sep 2016 13:41:00 -0400</pubDate>
        <link>http://bsk.education/AP-CSP/AP-CSP/2016/09/22/do-you-want-to-build-a.html</link>
        <guid isPermaLink="true">http://bsk.education/AP-CSP/AP-CSP/2016/09/22/do-you-want-to-build-a.html</guid>
        
        
      </item>
    
      <item>
        <title>üé≤ Dice</title>
        <description>&lt;p&gt;Let‚Äôs say we throw two dice on the ground. What number did we roll?&lt;/p&gt;

&lt;p&gt;Press &lt;span style=&quot;color: #ED1F5E&quot;&gt;‚ñ∂ Play&lt;/span&gt; below.&lt;/p&gt;

&lt;script type=&quot;text/p5&quot; data-height=&quot;490&quot; data-preview-width=&quot;470&quot;&gt;
function setup() {
	createCanvas(windowWidth, windowHeight);
	background(&#39;#ED245E&#39;);
}

function draw() {
	strokeWeight(3);
	stroke(&#39;black&#39;);
	fill(255);
	rect(20, 20, 200, 200);
	fill(&#39;blue&#39;);
	ellipse(120, 120, 50, 50);
	fill(255);
	rect(250, 20, 200, 200);
	fill(&#39;blue&#39;);
	ellipse(300, 70, 50, 50);
	ellipse(350, 120, 50, 50);
	ellipse(400, 170, 50, 50);
}
&lt;/script&gt;

&lt;p&gt;Now it‚Äôs your turn. We need 6‚Äôs to win! Modify the code to make each dice always show a 6.&lt;/p&gt;

&lt;h2 id=&quot;roll-the-die&quot;&gt;Roll the Die&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Change the color of your die&lt;/li&gt;
  &lt;li&gt;Change the color of the background&lt;/li&gt;
  &lt;li&gt;Move the die around the screen&lt;/li&gt;
  &lt;li&gt;Add another die&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;span-classmega-octicon-octicon-tagspan-tag-it-for-a-55&quot;&gt;&lt;span class=&quot;mega-octicon octicon-tag&quot;&gt;&lt;/span&gt; Tag it for a 5&lt;sup id=&quot;fnref:5&quot;&gt;&lt;a href=&quot;#fn:5&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/h2&gt;
&lt;p&gt;Write your name on your sketch, using the shapes you know so far.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:5&quot;&gt;
      &lt;p&gt;I‚Äôm grading you out of 5, like the AP will. &lt;a href=&quot;#fnref:5&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 19 Sep 2016 18:51:00 -0400</pubDate>
        <link>http://bsk.education/AP-CSP/AP-CSP/2016/09/19/dice.html</link>
        <guid isPermaLink="true">http://bsk.education/AP-CSP/AP-CSP/2016/09/19/dice.html</guid>
        
        
      </item>
    
      <item>
        <title>Hello üåé</title>
        <description>&lt;p&gt;Try dragging the &lt;strong&gt;Learning Target&lt;/strong&gt;.&lt;/p&gt;

&lt;script type=&quot;text/p5&quot; data-autoplay=&quot;&quot; data-preview-width=&quot;700&quot;&gt;
var aim = &quot;üéØ Learning Target: I can create a simple p5 sketch.&quot;;
var do_now = &quot;Do Now: How many programming languages have you learned? Which is your favorite, and why?&quot;

function setup() {
	createCanvas(windowWidth, windowHeight);

}

function draw() {
	background(&#39;white&#39;);
	textSize(48);
	textFont(&quot;Proxima Nova&quot;);
	textStyle(&#39;bold&#39;);
	fill(`#7f1ae5`);
	if (mouseIsPressed) {
		text(aim, mouseX, mouseY, windowWidth);
		var do_now = &quot;Uh oh...where&#39;d the Do Now go?&quot;
		textAlign(&#39;center&#39;)

	} else {
		text(aim, 10, 50, windowWidth);
		var do_now = &quot;Do Now: How many programming languages have you learned? Which is your favorite, and why?&quot;
	}
	textSize(18)
	textStyle(&#39;bold&#39;)
	fill(&#39;#424242&#39;)
	text(do_now, 10, 150, windowWidth, windowHeight)
}



function windowResized() {
	resizeCanvas(windowWidth, windowHeight);
}
&lt;/script&gt;

&lt;p&gt;This is &lt;strong&gt;&lt;span style=&quot;color: #ED1F5E&quot;&gt;p5&lt;/span&gt;&lt;/strong&gt;. It allows you to create interactive ‚Äúsketches‚Äù using HTML/CSS and JavaScript.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;small&gt;p5.js is a JavaScript library that starts with the original goal of Processing, to make coding accessible for artists, designers, educators, and beginners, and reinterprets this for today‚Äôs web. Using the original metaphor of a software sketchbook, p5.js has a full set of drawing functionality. However, you‚Äôre not limited to your drawing canvas, you can think of your whole browser page as your sketch! For this, p5.js has addon libraries that make it easy to interact with other HTML5 objects, including text, input, video, webcam, and sound.&lt;/small&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;color: #ED1F5E&quot;&gt;p5&lt;/span&gt;&lt;/strong&gt; works on a &lt;code class=&quot;highlighter-rouge&quot;&gt;canvas&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://storage.googleapis.com/wzukusers/user-13385976/images/55bd59e37d7aaQu1bsn7/easel_400.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Everything you ‚Äúdraw‚Äù will be drawn on this canvas, &lt;code class=&quot;highlighter-rouge&quot;&gt;pixels&lt;/code&gt; on a screen.&lt;/p&gt;

&lt;p&gt;Here‚Äôs one for you to play with:&lt;/p&gt;

&lt;script type=&quot;text/p5&quot; data-autoplay=&quot;&quot; data-preview-width=&quot;200&quot;&gt;
function setup() {
  createCanvas(200,200);
}

function draw() {
  rect(50,50,80,50);
}

// What&#39;s this!?
&lt;/script&gt;

&lt;h2 id=&quot;ide&quot;&gt;IDE&lt;/h2&gt;
&lt;p&gt;We‚Äôre going to use an online IDE (Integrated Development Environment). We used &lt;strong&gt;PyCharm&lt;/strong&gt; for &lt;strong&gt;Python&lt;/strong&gt;, and we will use &lt;strong&gt;&lt;a href=&quot;https://alpha.editor.p5js.org/&quot;&gt;p5 Web Editor&lt;/a&gt;&lt;/strong&gt; for, well‚Ä¶&lt;strong&gt;&lt;span style=&quot;color: #ED1F5E&quot;&gt;p5&lt;/span&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;fun-with-shapes&quot;&gt;Fun With Shapes&lt;/h2&gt;

&lt;p&gt;Today, we‚Äôre going to learn how to draw three shapes: &lt;code class=&quot;highlighter-rouge&quot;&gt;line&lt;/code&gt;s, &lt;code class=&quot;highlighter-rouge&quot;&gt;rect&lt;/code&gt;angles, and &lt;code class=&quot;highlighter-rouge&quot;&gt;ellipse&lt;/code&gt;s.&lt;/p&gt;

&lt;p&gt;(Also, &lt;code class=&quot;highlighter-rouge&quot;&gt;point&lt;/code&gt;, but that one‚Äôs kind boring.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;mega-octicon octicon-bug&quot;&gt;&lt;/span&gt; Go ahead and try it. Turn on a single pixel:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;line&quot;&gt;| &lt;code class=&quot;highlighter-rouge&quot;&gt;line()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;A line is defined by &lt;strong&gt;two points&lt;/strong&gt;:  A and B
In &lt;span style=&quot;color: #ED1F5E&quot;&gt;p5&lt;/span&gt;:  &lt;code class=&quot;highlighter-rouge&quot;&gt;line(x1, y1, x2, y2);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;‚ú± lower case ‚Äòline‚Äô  &lt;br /&gt;
‚ú± four &lt;strong&gt;parameters&lt;/strong&gt; in parenthesis, separated by commas  &lt;br /&gt;
‚ú± lines end with semicolon &lt;code class=&quot;highlighter-rouge&quot;&gt;;&lt;/code&gt;, just like JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;mega-octicon octicon-bug&quot;&gt;&lt;/span&gt; Try to draw a line at an angle that &lt;em&gt;isn‚Äôt&lt;/em&gt; 90¬∞ or 180¬∞ (not vertical or horizontal).&lt;/p&gt;

&lt;h3 id=&quot;rect&quot;&gt;‚ñ≠ &lt;code class=&quot;highlighter-rouge&quot;&gt;rect()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;In &lt;span style=&quot;color: #ED1F5E&quot;&gt;p5&lt;/span&gt;, rectangles are defined by the &lt;strong&gt;top left corner&lt;/strong&gt;, followed by a &lt;strong&gt;width&lt;/strong&gt; and a &lt;strong&gt;height&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;‚ú± lower case ‚Äòrect‚Äô  &lt;br /&gt;
‚ú± four ‚Äòparameters‚Äô in parenthesis  &lt;br /&gt;
‚ú± lines end with semicolon &lt;code class=&quot;highlighter-rouge&quot;&gt;;&lt;/code&gt;, just like JavaScript.&lt;/p&gt;

&lt;p&gt;You can also define them using &lt;strong&gt;corners&lt;/strong&gt;: the &lt;em&gt;top left&lt;/em&gt; and &lt;em&gt;bottom right&lt;/em&gt; point.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;rectMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CORNERS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// What happens if you put rectMode(CORNERS) on line 2?&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Two&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lines&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;ellipse&quot;&gt;‚¨≠ &lt;code class=&quot;highlighter-rouge&quot;&gt;ellipse()&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;An &lt;strong&gt;ellipse&lt;/strong&gt; is an oval. For the purposes of this class (before you‚Äôve studied &lt;a href=&quot;https://www.google.com/webhp?sourceid=chrome-instant&amp;amp;ion=1&amp;amp;espv=2&amp;amp;ie=UTF-8#q=conic%20sections&quot; title=&quot;Google it!&quot;&gt;conic sections&lt;/a&gt;), all we need to know is that a circle is actually a special kind of ellipse, and &lt;code class=&quot;highlighter-rouge&quot;&gt;ellipse()&lt;/code&gt; is the command that will let us draw &lt;strong&gt;round&lt;/strong&gt; shapes.&lt;/p&gt;

&lt;p&gt;In &lt;span style=&quot;color: #ED1F5E&quot;&gt;p5&lt;/span&gt;, ellipses are defined by a &lt;strong&gt;center&lt;/strong&gt; coordinate, a &lt;strong&gt;width&lt;/strong&gt;, a &lt;strong&gt;height&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;ellipse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;span class=&quot;mega-octicon octicon-bug&quot;&gt;&lt;/span&gt; Use this to make a circle. In a comment (&lt;code class=&quot;highlighter-rouge&quot;&gt;//&lt;/code&gt;), what do you notice about the &lt;code class=&quot;highlighter-rouge&quot;&gt;width&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;height&lt;/code&gt; that make a circle?&lt;/p&gt;

&lt;h2 id=&quot;drawing-time&quot;&gt;Drawing time!&lt;/h2&gt;

&lt;p&gt;What if I combine &lt;code class=&quot;highlighter-rouge&quot;&gt;line&lt;/code&gt;s, &lt;code class=&quot;highlighter-rouge&quot;&gt;rect&lt;/code&gt;angles, and &lt;code class=&quot;highlighter-rouge&quot;&gt;ellipse&lt;/code&gt;s? What can I make?&lt;/p&gt;

&lt;script type=&quot;text/p5&quot; data-preview-width=&quot;200&quot; data-preview-height=&quot;200&quot;&gt;
function setup() {
	createCanvas(200, 200)
}

function draw() {
	line(78, 5, 78, 200)
	line(82, 5, 82, 200)
	rect(5, 5, 150, 75);
	rect(50, 40, 60, 30);
	ellipse(80, 80, 30, 15);
}
&lt;/script&gt;

&lt;p&gt;OK, I‚Äôm not a great artist. But we‚Äôre getting somewhere.&lt;/p&gt;

&lt;p&gt;Go draw something better!&lt;/p&gt;

&lt;h2 id=&quot;exit-slip&quot;&gt;Exit Slip!&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;What happens if you change the numbers on line 6: &lt;code class=&quot;highlighter-rouge&quot;&gt;rect(50,50,80,50);&lt;/code&gt;?&lt;/li&gt;
  &lt;li&gt;How could you draw a square?&lt;/li&gt;
  &lt;li&gt;What is the &lt;strong&gt;algorithm&lt;/strong&gt; that p5 uses to draw rectangles?&lt;/li&gt;
  &lt;li&gt;How do you write a comment in &lt;span style=&quot;color: #ED1F5E&quot;&gt;p5&lt;/span&gt;?&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 15 Sep 2016 21:31:00 -0400</pubDate>
        <link>http://bsk.education/AP-CSP/AP-CSP/2016/09/15/hello.html</link>
        <guid isPermaLink="true">http://bsk.education/AP-CSP/AP-CSP/2016/09/15/hello.html</guid>
        
        
      </item>
    
      <item>
        <title>Algorithms &amp; Language</title>
        <description>&lt;h2 id=&quot;learning-targets&quot;&gt;Learning Targets&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;I can define ‚Äúalgorithm‚Äù and give examples from daily life.&lt;/li&gt;
  &lt;li&gt;I can define and write &lt;em&gt;pseudocode&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;activity-0-creating-algorithms-&quot;&gt;Activity 0: Creating Algorithms ‚úà&lt;/h2&gt;
&lt;p&gt;0‚É£ Write an algorithm for making a paper
airplane. &lt;br /&gt;
1‚É£ Your partner must follow instructions exactly.&lt;/p&gt;

&lt;p&gt;How can you use &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;else&lt;/code&gt; in your instructions? What are &lt;code class=&quot;highlighter-rouge&quot;&gt;if...else‚Ä¶&lt;/code&gt; statements called?&lt;/p&gt;

&lt;p&gt;When can you safely use &lt;code class=&quot;highlighter-rouge&quot;&gt;repeat&lt;/code&gt; in your instructions? What is that called?&lt;/p&gt;

&lt;p&gt;Were you instructions as clear as you thought? How did &lt;strong&gt;ambiguity&lt;/strong&gt; get in your way?&lt;/p&gt;

&lt;h2 id=&quot;activity-1-minimum-&quot;&gt;Activity 1: Minimum üé¥&lt;/h2&gt;
&lt;p&gt;This activity will help us compose more specific algorithms.&lt;/p&gt;

&lt;p&gt;The AP CS Principles definition of &lt;strong&gt;algorithm&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size: 30px; line-height: 1.2;&quot;&gt;‚ú®Algorithms are precise sequences of instructions for processes that can be executed by a computer and are implemented using programming languages.‚ú®&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Task:&lt;/strong&gt; Write an algorithm to find the card with the lowest value in the row of cards.&lt;/p&gt;

&lt;h2 id=&quot;activity-2--language-algorithms&quot;&gt;Activity 2: ü§ñ Language Algorithms&lt;/h2&gt;
&lt;p&gt;Instead of writing our own commands, what happens if we agree on a set of simple commands?&lt;/p&gt;
</description>
        <pubDate>Mon, 12 Sep 2016 21:46:58 -0400</pubDate>
        <link>http://bsk.education/AP-CSP/AP-CSP/2016/09/12/algorithms.html</link>
        <guid isPermaLink="true">http://bsk.education/AP-CSP/AP-CSP/2016/09/12/algorithms.html</guid>
        
        
      </item>
    
  </channel>
</rss>
